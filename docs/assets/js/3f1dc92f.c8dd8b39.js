"use strict";(self.webpackChunkfinder_docs=self.webpackChunkfinder_docs||[]).push([[939],{5135:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"react/finder","title":"Finder","description":"The root component, Finder accepts an armada of configuration properties and provides simplified context to consuming components.","source":"@site/docs/react/finder.md","sourceDirName":"react","slug":"/react/finder","permalink":"/finder/react/finder","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"Usage","permalink":"/finder/react/"},"next":{"title":"FinderContent","permalink":"/finder/react/finder-content"}}');var i=t(4848),s=t(8453);const o={sidebar_position:0},a="Finder",d={},c=[];function l(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"finder",children:"Finder"})}),"\n",(0,i.jsx)(n.p,{children:"The root component, Finder accepts an armada of configuration properties and provides simplified context to consuming components."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Type Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"interface FinderProps<FItem, FContext> {\n    items: FItem[] | undefined | null;\n\n    // static rule definitions\n    rules: FinderRule<FItem>[];\n\n    // optional side effects triggered when certain coupled rules change\n    effects?: RuleEffects[];\n\n    // any state or methods that needs to be injected from your React app.\n    // Context will be passed to all rules, as well as all FinderContent components.\n    context?: FContext;\n\n    // false by default.\n    isLoading?: boolean;\n\n    // false by default.\n    disabled?: boolean;\n\n    initialSearchTerm?: string;\n    initialSortBy?: string;\n    initialSortDirection?: SortDirection;\n    initialGroupBy?: string;\n    initialFilters?: Record<string, any>;\n\n    // ranked search and custom search rules may conflict.\n    ignoreSortByRulesWhileSearchRuleIsActive?: boolean;\n\n    // Force items to use a group rule.\n    // If no groupBy is set, the first valid group rule will be used.\n    requireGroup?: boolean;\n\n    // Pagination\n    page?: number;\n    numItemsPerPage?: number;\n\n    // Triggered after Finder initializes for the first time.\n    onInit?: FinderOnInitCallback;\n\n    // Triggered when a valid items array is first received\n    onReady?: FinderOnReadyCallback;\n\n    // Triggered the first time a user interacts with the component.\n    onFirstUserInteraction?: FinderOnFirstUserInteractCallback;\n\n    // When Finder's internal states changes, a snapshot is emitted to listeners\n    onChange?: FinderOnChangeCallback;\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example Usage"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"\n// Static rule definitions are best stored outside the component\nconst rules = finderRuleSet<Shoe>([\n    searchRule({\n        searchFn: (item) => item.name\n    }),\n    filterRule({\n        id: 'filter_by_brand',\n        filterFn: (item, value) => item.brand.name === value\n    }),\n    sortByRule({\n        id: 'sort_by_prize',\n        sortFn: (item) => item.price,\n    }),\n    sortByRule({\n        id: 'sort_by_rating',\n        sortFn: (item) => item.rating,\n    })\n    groupByRule({\n        id: 'group_by_brand',\n        groupFn: (item) => item.brand,\n    })\n]);\n\nfunction Results() {\n\n    const {data, isPending} = useGetShoes();\n\n    const [selectedItems, setSelectedItems] = useState<Shoe[]>([]);\n\n    // This context will be passed to all rules functions, as well as all FinderContent render props.\n    const context = useMemo(() => {\n        isSelected: (item: Shoe) => selectedItems.includes(item),\n        selectedItems,\n        setSelectedItems,\n    }, [selectedItems, setSelectedItems])\n\n    return (\n        <Finder items={data} isLoading={isPending} context={context}>\n\n            {/* Your custom controls interface */}\n            <ShoeRuleControls />\n\n            {/* Finder will determine which set of render props to call. */}\n            <FinderContent>\n                {{\n                    loading: <Card>Loading...</Card>,\n                    items: ShoeList,\n                    groups: ShoesByBrandGroups,\n                    empty: <Card>No shoes found in this category.</Card>\n                    noMatches: <Card>No results found.</Card>\n                }}\n            </FinderContent>\n\n        </Finder>\n    })\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var r=t(6540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);
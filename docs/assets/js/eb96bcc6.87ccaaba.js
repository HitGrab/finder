"use strict";(self.webpackChunkfinder_docs=self.webpackChunkfinder_docs||[]).push([[2217],{1021:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>d,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"rules/index","title":"Rules","description":"\\"Rules\\" are static definitions that tell Finder how to interact with the unique shape of your Items objects. Finder will use that information to determine what internal state to track.","source":"@site/docs/rules/index.md","sourceDirName":"rules","slug":"/rules/","permalink":"/finder/rules/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Pre-Testing Matches","permalink":"/finder/tutorial/testing"},"next":{"title":"SearchRule","permalink":"/finder/rules/search-rule"}}');var s=n(4848),i=n(8453);const d={sidebar_position:2},a="Rules",l={},o=[{value:"Rule Processing Order",id:"rule-processing-order",level:2}];function h(e){const r={a:"a",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",mermaid:"mermaid",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"rules",children:"Rules"})}),"\n",(0,s.jsx)(r.p,{children:'"Rules" are static definitions that tell Finder how to interact with the unique shape of your Items objects. Finder will use that information to determine what internal state to track.'}),"\n",(0,s.jsx)(r.p,{children:"Each set of rules has a corresponding api to access and mutate their state."}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{children:"Rule"}),(0,s.jsx)(r.th,{children:"API"}),(0,s.jsx)(r.th,{children:"Purpose"})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../rules/search-rule",children:"SearchRule"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../api/search-api",children:"finder.search"})}),(0,s.jsx)(r.td,{children:"Determine which properties in your Item should be searchable."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../rules/filter-rule",children:"FilterRule"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../api/filters-api",children:"finder.filter"})}),(0,s.jsx)(r.td,{children:"Determine what filter predicates are required, and how they should be tested against your Items."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../rules/sort-by-rule",children:"SortByRule"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../api/sort-by-api",children:"finder.sortBy"})}),(0,s.jsx)(r.td,{children:"determine what order your Items should be displayed in."})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../rules/group-by-rule",children:"GroupByRule"})}),(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"../api/group-by-api",children:"finder.groupBy"})}),(0,s.jsx)(r.td,{children:"determine how to categorize your Items"})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"rule-processing-order",children:"Rule Processing Order"}),"\n",(0,s.jsx)(r.mermaid,{value:'---\nconfig:\n  theme: redux\n---\nflowchart LR\n subgraph s1["<span style=color:>Identify Matches</span>"]\n        A["Search"]\n        n1["Filter"]\n  end\n subgraph s2["Sort and Slice Matches"]\n        n2["SortBy"]\n        n3["Pagination"]\n  end\n subgraph s3["Group Matches"]\n        n4["GroupBy"]\n  end\n    A --\x3e n1\n    n1 --\x3e n2\n    n2 --\x3e n3\n    n3 --\x3e n4\n    A@{ shape: rounded}\n    n1@{ shape: rounded}\n    n2@{ shape: rounded}\n    n3@{ shape: rounded}\n    n4@{ shape: rounded}\n'}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:["During the ",(0,s.jsx)(r.strong,{children:"Identify Matches"})," phase, items are tested against ",(0,s.jsx)(r.em,{children:"all"})," active Search and Filter rules. Any mismatches are discarded."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:["In ",(0,s.jsx)(r.strong,{children:"Sort and Slice Matches"}),", surviving items are ordered and paginated. This phase is skipped if no SortBy rules are active and pagination is not enabled."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:["Lastly, we ",(0,s.jsx)(r.strong,{children:"Group Matches"})," if a GroupBy rule is active. The searched + filtered + sorted + paginated items array is grouped by a common property defined in the GroupBy rule."]}),"\n"]}),"\n"]})]})}function c(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>a});var t=n(6540);const s={},i=t.createContext(s);function d(e){const r=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);
"use strict";(self.webpackChunkfinder_docs=self.webpackChunkfinder_docs||[]).push([[32],{1235:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"events-and-effects/effects","title":"Effects","description":"Effects are onChange callbacks triggered when certain rules are changed.","source":"@site/docs/events-and-effects/effects.md","sourceDirName":"events-and-effects","slug":"/events-and-effects/effects","permalink":"/events-and-effects/effects","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Effects & Events","permalink":"/events-and-effects/"},"next":{"title":"Events","permalink":"/events-and-effects/events"}}');var r=t(4848),i=t(8453);const a={},c="Effects",l={},o=[];function f(e){const n={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"effects",children:"Effects"})}),"\n",(0,r.jsx)(n.p,{children:"Effects are onChange callbacks triggered when certain rules are changed."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Type Signature"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:"ruleEffect(rules: string | FinderRule | (string | FinderRule)[], (instance:FinderCore) => void),\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example Usage"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ts",children:'const rules = finderRuleset<Fruit>([\n    filterRule({\n        id: "is_an_orange",\n        filterFn: (item) => item.type === "orange",\n        isBoolean: true,\n    }),\n    filterRule({\n        id: "is_an_apple",\n        filterFn: (item) => item.type === "apple",\n        isBoolean: true,\n        defaultValue: true,\n    }),\n    filterRule({\n        id: "is_fresh",\n        filterFn: (item) => item.is_fresh,\n        isBoolean: true,\n    }),\n]);\n\n// whenever these rules are changed, the callback will be triggered.\nconst effects = [\n    ruleEffect(["is_an_orange", "is_an_apple"], (instance) => {\n        if (instance.filters.get("is_an_orange") === true) {\n            instance.filters.toggle("apple");\n        }\n    }),\n];\n\nconst finder = new FinderCore(objectItems, { rules, effects });\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"Changes triggered inside an effect callback are processed silently, and do not trigger Events."})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);
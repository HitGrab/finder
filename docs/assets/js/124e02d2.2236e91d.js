"use strict";(self.webpackChunkfinder_docs=self.webpackChunkfinder_docs||[]).push([[9579],{2869:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"api/group-by-api","title":"GroupBy","description":"The GroupBy api can be accessed from finder.groupBy.","source":"@site/docs/api/group-by-api.md","sourceDirName":"api","slug":"/api/group-by-api","permalink":"/finder/api/group-by-api","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Pagination","permalink":"/finder/api/pagination-api"},"next":{"title":"Events","permalink":"/finder/api/events-api"}}');var i=r(4848),t=r(8453);const s={sidebar_position:4},a="GroupBy",u={},p=[];function c(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"groupby",children:"GroupBy"})}),"\n",(0,i.jsxs)(n.p,{children:["The GroupBy api can be accessed from ",(0,i.jsx)(n.code,{children:"finder.groupBy"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Type Signature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"finder.groupBy {\n\n    activeRule?: GroupByRule\n\n    requireGroup: boolean\n\n    // all defined GroupBy rules. Useful for controls.\n    rules: GroupByRule[]\n\n    groupSortDirection: 'asc' | 'desc'\n\n    set(identifier?: string | GroupByRule): void\n\n    toggle(identifier?: string | GroupByRule): void\n\n    // Determine how groups should be sorted.\n    setGroupSortDirection(direction?: 'asc' | 'desc')\n\n    reset()\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example Usage"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"function GroupByControls() {\n    const finder = useFinder();\n    return (\n        <select onChange={(value) => finder.groupBy.set(value)}>\n            {finder.groupBy.rules.map((rule) => {\n                return (\n                    <option value={rule.id} key={rule.id}>\n                        {rule.label}\n                    </option>\n                );\n            })}\n        </select>\n    );\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>a});var o=r(6540);const i={},t=o.createContext(i);function s(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);
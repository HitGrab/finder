"use strict";(self.webpackChunkfinder_docs=self.webpackChunkfinder_docs||[]).push([[214],{7466:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"tutorial/component","title":"Display Matches","description":"Now that we have our ruleset, time to pass it to a Finder instance!","source":"@site/docs/tutorial/component.md","sourceDirName":"tutorial","slug":"/tutorial/component","permalink":"/finder/tutorial/component","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Sort By","permalink":"/finder/tutorial/ruleset/sort-by"},"next":{"title":"Build Controls","permalink":"/finder/tutorial/controls"}}');var o=t(4848),i=t(8453);const s={sidebar_position:3},a="Display Matches",c={},d=[];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"display-matches",children:"Display Matches"})}),"\n",(0,o.jsx)(n.p,{children:"Now that we have our ruleset, time to pass it to a Finder instance!"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ts",children:"import { ruleset } from './rules.ts';\n\nfunction ApartmentFinder() {\n    const {data, isPending} = useListings();\n    const userLocation = useUserLocation();\n\n    // This context - which can be a class, object, or set of methods - will be available to all rules and render props.\n    const context = useMemo(() => {\n        return {\n            x: userLocation.x,\n            y: userLocation.y\n        }\n    }, [userLocation])\n\n    return (\n        <Finder items={data} isLoading={isPending} context={context} rules={ruleset}>\n\n            // Finder.Content uses the render props pattern.\n            // Only a single state will be active at any one time.\n            <Finder.Content>\n                {{\n\n                    // Displayed while Finder's isLoading property is true.\n                    loading: 'Loading...',\n\n                    // Finder received an empty items array.\n                    empty: 'No listings found.'\n\n                    // No items were found that matched the current rules.\n                    results: 'No results found.',\n\n                    // This items array will have been searched, filtered, and sorted already.\n                    items: ({items}) => {\n                        return items.map((listing) => (\n                            <Listing\n                                listing={listing}\n                                key={listing.id}\n                            />\n                        ))\n                    },\n                }}\n            </Finder.Content>\n        </Finder>\n    );\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"This component will render out the processed items array, but doesn't have any styling or controls."}),"\n",(0,o.jsx)(n.admonition,{type:"warning",children:(0,o.jsx)(n.p,{children:"It's strongly recommended you either memoize your render prop functions, or make them stable component references. An arrow function is volatile, and may cause React to re-render the component every time."})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkfinder_docs=self.webpackChunkfinder_docs||[]).push([[6712],{1810:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/test-api","title":"Tests","description":"Test lets you test a ruleset\'s results without mutating state. The Tests api can be accessed from finder.test.","source":"@site/docs/api/test-api.md","sourceDirName":"api","slug":"/api/test-api","permalink":"/finder/api/test-api","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Matches","permalink":"/finder/api/matches-api"},"next":{"title":"React Components","permalink":"/finder/components/"}}');var i=n(4848),r=n(8453);const o={},a="Tests",c={},d=[];function l(e){const t={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"tests",children:"Tests"})}),"\n",(0,i.jsxs)(t.p,{children:["Test lets you test a ruleset's results without mutating state. The Tests api can be accessed from ",(0,i.jsx)(t.code,{children:"finder.test"}),"."]}),"\n",(0,i.jsx)(t.admonition,{title:"Advanced feature",type:"tip",children:(0,i.jsxs)(t.p,{children:["Want to test a specific filter or a searchTerm instead of a complete ruleset? Use ",(0,i.jsx)(t.code,{children:"finder.filters.test()"})," or ",(0,i.jsx)(t.code,{children:"finder.search.test()"})," instead."]})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Type Signature"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"interface SerializedMixins {\n    search?: {\n        searchTerm: string;\n        rule?: SearchRule;\n    };\n    filters?: {\n        rules: HydratedFilterRule[];\n        values: Record<string, any>;\n    };\n    sortBy?: {\n        rule?: SortByRule;\n        sortDirection?: SortDirection;\n    };\n    pagination?: {\n        page: number;\n        numItemsPerPage?: number;\n    };\n    groupBy?: {\n        rule?: GroupByRule;\n        sortDirection?: SortDirection;\n    };\n}\n\nfinder.test(mixins: SerializedMixins, isAdditive: boolean): FItem[]\n"})}),"\n",(0,i.jsx)(t.admonition,{title:"Additive Testing",type:"info",children:(0,i.jsxs)(t.p,{children:["If ",(0,i.jsx)(t.code,{children:"isAdditive"})," is true, Finder will merge the existing ruleset and state into the test."]})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);